import config
import cProfile
import pstats

from src.engine.engine import Engine
from src.managers.event_manager import EventManager
from src.managers.input_manager import InputManager

WINDOW_TITLE = "Arcade - Template"


def init_engine(cfg_dat: dict):
    event_manager = EventManager()
    input_manager = InputManager(event_manager)

    engine = Engine(cfg_dat, WINDOW_TITLE, input_manager, event_manager)
    engine.starter()


if __name__ == '__main__':
    # Fetch the dict data from .yaml configs file
    config_data = config.load_config_file()

    # Run with cProfile to fetch completion time and call number logs
    cProfile.run('init_engine(config_data)', "output.dat")

    # Generate profiling report using pstats and the ouput.dat generated by cProfile
    # Sort by total time
    with open("output_time.txt", "w") as f:
        p = pstats.Stats("output.dat", stream=f)
        p.sort_stats("time").print_stats()

    # Sort by call number
    with open("output_calls.txt", "w") as f:
        p = pstats.Stats("output.dat", stream=f)
        p.sort_stats("calls").print_stats()
